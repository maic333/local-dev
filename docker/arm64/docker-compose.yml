version: '3.9'
services:
#  localstack:
#    image: localstack/localstack:stable-arm64
#    container_name: 'localstack'
#    environment:
#      - EDGE_PORT=4566
#      - SERVICES=sqs,s3
#      - AWS_DEFAULT_REGION=eu-central-1
#      - AWS_ACCESS_KEY_ID=na
#      - AWS_SECRET_ACCESS_KEY=na
#      - DEBUG=1
#    ports:
#      - '4566:4566'
#    volumes:
#      - "${LOCALSTACK_VOLUME_DIR:-./localstack}:/var/lib/localstack"
#      - "../localstack_bootstrap/script.sh:/etc/localstack/init/ready.d/init-aws.sh"  # ready hook  # ready hook
#    restart: 'unless-stopped'
#  redis:
#    image: 'redis:alpine'
#    container_name: 'redis'
#    ports:
#      - '6379:6379'
#    expose:
#      - '6379'
#    restart: 'unless-stopped'
 mysql:
   image: mysql:8.0.39
   container_name: 'mysql'
   command: --default-authentication-plugin=mysql_native_password --max-connections=1000 --wait-timeout=2147483 --join-buffer-size=10M  --net-read-timeout=60000 --connect-timeout=60 --innodb-buffer-pool-size=2G --innodb-buffer-pool-instances=16 --innodb-log-file-size=1G --key-buffer-size=512M --sql-mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION
  #  command: --max_allowed_packet=20000M --sql_mode="NO_ENGINE_SUBSTITUTION,ALLOW_INVALID_DATES" --sort_buffer_size=512000
   environment:
     MYSQL_ROOT_PASSWORD: 'root'
     MYSQL_ROOT_HOST: '%'
   ports:
     - '3306:3306'
   expose:
     - '3306'
   volumes:
     - '~/data/mysql/db:/var/lib/mysql'
   restart: 'unless-stopped'
#  mongodb:
#    image: arm64v8/mongo:6
#    container_name: 'mongodb'
#    volumes:
#      - './data/mongodb/db:/data/db'
#    ports:
#      - '27017:27017'
#    expose:
#      - '27017'
#    restart: 'unless-stopped'
#  opensearch-node1: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
#    image: opensearchproject/opensearch:latest # Specifying the latest available image - modify if you want a specific version
#    container_name: opensearch-node1
#    environment:
#      - cluster.name=opensearch-cluster # Name the cluster
#      - discovery.type=single-node
#      - plugins.security.disabled=true
#    ulimits:
#      memlock:
#        soft: -1 # Set memlock to unlimited (no soft or hard limit)
#        hard: -1
#      nofile:
#        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
#        hard: 65536
#    volumes:
#      - opensearch-data1:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
#    ports:
#      - 9200:9200 # REST API
#      - 9600:9600 # Performance Analyzer
#    networks:
#      - opensearch-net # All of the containers will join the same Docker bridge network
#  opensearch-dashboards:
#    image: opensearch-dashboards-no-security
#    container_name: 'opensearch-dashboard'
#    build:
#      context: .
#      dockerfile: ../DockerfileOpenSearchDashboard
#    ports:
#      - 5601:5601 # Map host port 5601 to container port 5601
#    expose:
#      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
#    environment:
#      OPENSEARCH_HOSTS: '["http://opensearch-node1:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query
#    networks:
#      - opensearch-net


# volumes:
#  opensearch-data1:


# networks:
#  opensearch-net:

